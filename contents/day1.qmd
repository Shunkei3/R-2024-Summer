---
title: "Day 1: Introduction to R"
---

<br>




:::{.goals}
::::{.goals-header}
Learning Objectives
::::
::::{.goals-container}
+ to be able to use the basic features of RStudio.
+ to understand different types of R-base data structures and how to create and manipulate them.
+ understand how to do Matrix/Linear Algebra in R.
+ to be able to install and load R packages.
+ to be able to load and save data in R. 
::::
:::


### Preparation
If you are entirely new to R and RStudio, the following sections from the book "R for Data Science" might be helpful to read before the class. Each section is short. Also, don't worry about the code written in the book.

+ [Section 1.4: Prerequisites](https://r4ds.had.co.nz/introduction.html#prerequisites){target="_blank"}

+ [Section 2: Workflow: basics](https://r4ds.hadley.nz/workflow-basics.){target="_blank"}

+ [Section 6: Workflow scripts and projects](https://r4ds.hadley.nz/workflow-scripts)
  + We'll use RStudio projects instead of setting working directory manually. [Section 6.2.3: RStudio projects](https://r4ds.hadley.nz/workflow-scripts#rstudio-projects) explains RStudio projects.

### Lecture Slides

{{< fa laptop-code >}}  Click [here](https://shunkei3.github.io/R-slides/Lec_notes/Lec0/Lec0.html){target="_blank"} for Lecture 0's slides.


{{< fa laptop-code >}}  Click [here](https://shunkei3.github.io/R-slides/Lec_notes/Lec1/Lec1.html){target="_blank"} for Lecture 1's slides.

{{< fa file >}} [Exercise problems](https://shunkei3.github.io/R-slides/Lec_notes/Lec1/Lec1_exercise_solution.html){target="_blank"}: Exercise problems for Lecture 1. Solution is attached.

<br>


Quick view of the Lecture 1's slides:


```{=html}
<div style="display: flex; justify-content: center;"> 
<iframe width="900" height="600" src="https://shunkei3.github.io/R-slides/Lec_notes/Lec1/Lec1.html" title="Webpage example"></iframe>
</div>
```

<br>

### Supplementary Materials

{{< fa file >}} You can find a lot of features of R studio from [here](https://rstudio.github.io/cheatsheets/html/rstudio-ide.html?_gl=1*4yeznz*_ga*MjA3NjIxNzk0Ny4xNzE1NjIyMzk3*_ga_2C0WZ1JHG0*MTcyMzc2ODk2Ny41Ni4xLjE3MjM3NzM3NzQuMC4wLjA.){target="_blank"}.

{{< fa file >}} [Base R  Cheat Sheet](https://iqss.github.io/dss-workshops/R/Rintro/base-r-cheat-sheet.pdf){target="_blank"}

<br>

:::{.solutionbox}
::::{.solutionbox-header}
:::: {.solutionbox-icon}
::::
Faster matrix operations in R 
::::
:::{.solutionbox-body}
+ By default, R uses two libraries for common mathematical operations: Basic Linear Algebra Subprograms (BLAS) and LAPACK (Linear Algebra Package). For MAC users, instead of the BLAS library that comes with R, you can use Apple's vecLib (libBLAS.dylib), which is optimized for Apple to perform computations on large vectors. I don't know if this works on your machine (especially for Windows). But you can try it to speed up R! The process is not complicated. Just follow the instructions in the link below.

+ {{< fa newspaper >}} [Accelerating R](https://higgicd.github.io/posts/accelerating_r/){target="_blank"} by Dr. Christopher D. Higgins
+ [Even faster matrix math in R on macOS with M1](https://mpopov.com/blog/2021/10/10/even-faster-matrix-math-in-r-on-macos-with-m1/){target="_blank"} by Mikhail Popov
:::
:::